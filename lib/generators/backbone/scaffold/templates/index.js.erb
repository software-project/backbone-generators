// Make sure the namespace has been setup
App.Views.<%= namespace %> || (App.Views.<%= namespace %> = {})

// A `Backbone.View` for displaying a collection of `<%= name %>`s
App.Views.<%= namespace %>.Index = Backbone.View.extend({

  // DOM event bindings. (Remove if not used)
  events: {
    // 'click .some-class': 'someAction'
  },

  // The model passed into the view can be any `App.Collections.<%= name %>`
  // collection. This collection is used to instantiate a nested tree view
  // that will be responsible for rendering the ticket collection.
  initialize: function() {
    _.bindAll(this, 'render');
    this.render();
  },

  // Renders the view based on the `#<%= index_template_name %>` Handlebars.js template.
  render: function() {
    $(this.el).html(JST["<%= namespace.downcase %>.index.jst"]);

    // Setup the nested tree view. It will use the same model as this view, which
    // is the <%= name %> collection. We pass in a reference to the view that it should
    // use when doing inline editing of collection items. In this case, it is the
    // <%= name %>-specific item view.
    new App.Views.Collections.Tree({
      el: table,
      model: this.model,
      // groups: ['attribute'],
      // columns: ['attribute', 'attribute'],
      itemView: App.Views.<%= namespace %>.Edit
    });

    this.el.html(output);
  },
});